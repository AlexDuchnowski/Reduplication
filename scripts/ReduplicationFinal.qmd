---
title: "ReduplicationFinal"
format: html
editor: visual
---

## Data

```{r}
salad.data <- read.csv("../data/salad_consolidated_refined_counted.csv")

```
```{r}
opensubs.data <- read.csv("../data/en_v1_222k/full_222k_counted.csv")

```
```{r}
opensubs.filtered <- subset(opensubs.data, Label %in% c("P", "E", "S"))
opensubs.selected <- opensubs.filtered[, names(opensubs.filtered) %in% names(salad.data)]
combined.data <- rbind(salad.data, opensubs.selected)

write.csv(combined.data, "../data/combined_opensubs_salad_data.csv", row.names = FALSE)
```

```{r}
combined.data$Log_Freq_Count <- log(combined.data$Freq_Count)

head(combined.data)

```

```{r}
library(dplyr)
library(ggplot2)

labels.1 <- readLines("../data/annotations/opensubs_agreed_1.txt")
labels.2 <- readLines("../data/annotations/opensubs_agreed_2.txt")

all.labels <- c(labels.1, labels.2)

label.freq <- table(all.labels)
label.df <- data.frame(Label = names(label.freq), Frequency = as.numeric(label.freq))

label.df$Percentage <- label.df$Frequency / sum(label.df$Frequency) * 100

ggplot(label.df, aes(x = "", y = Frequency, fill = Label)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) +
  labs(title = "Distribution of Semantic Contribution Labels in OpenSubs Dataset",
       fill = "Label") +
  theme_void() +
  scale_fill_discrete(labels = paste(label.df$Label, sprintf("(%0.1f%%)", label.df$Percentage))) +
  theme(legend.position = "bottom")
```

```{r}
library(ggplot2)

ggplot(combined.data, aes(x = POS, fill = POS)) +
  geom_bar() +
  geom_text(stat='count', aes(label= after_stat(count)), vjust=-0.5) + 
  labs(title = "Distribution of Parts of Speech",
       x = "Part of Speech",
       y = "Count")
```

```{r}
library(ggplot2)

ggplot(combined.data, aes(x = Label, fill = Label)) +
  geom_bar() +
  geom_text(stat='count', aes(label= after_stat(count)), vjust=-0.5) + 
  labs(title = "Distribution of Semantic Contributions",
       x = "Semantic Contribution",
       y = "Count")

```

```{r}
library(ggplot2)
library(nnet)

summary(combined.data)
ggplot(combined.data, aes(x = POS, fill = Label)) +
  geom_bar() + 
  labs(title = "Distribution of Semantic Contributions by POS",
       x = "POS",
       y = "Count")

```

## Raw probabilities of P/S/E given POS
```{r}
library(dplyr)
library(ggplot2)
library(knitr)

label.counts <- combined.data %>% 
  group_by(POS, Label) %>% 
  summarize(count = n())

pos.totals <- combined.data %>% 
  group_by(POS) %>% 
  summarize(total.count = n())

label.percentages <- label.counts %>% 
  left_join(pos.totals, by = "POS") %>%
  mutate(percentage = (count / total.count) *100)

label.percentages.df <- as.data.frame(label.percentages)

kable(label.percentages.df, caption = "Percentage of Semantic Contributions by POS")


```



## Model (with POS, word length, and frequency as predictors)

```{r}
combined.data$POS <- factor(combined.data$POS, levels = c("NN", "JJ", "RB", "VB"))

combined.data$Label <- factor(combined.data$Label, levels = c("P", "S", "E"))

combined.data$POS <- relevel(combined.data$POS, ref = "NN")

combined.data$Label <- relevel(combined.data$Label, ref = "P")

model <- multinom(Label ~ POS + Word_Length + Log_Freq_Count, data = combined.data)

summary(model)
```
```{r}
z <- summary(model)$coefficients/summary(model)$standard.errors
z
```
```{r}
p <- (1 - pnorm(abs(z), 0, 1)) * 2
p
```
## Word Length only Model

```{r}
length.model <- multinom(Label ~ Word_Length, data = combined.data)

summary(length.model)
```
```{r}
library(ggplot2)
library(tidyr)

new.data <- data.frame(Word_Length = seq(min(combined.data$Word_Length), max(combined.data$Word_Length), length.out = 100))

length.predictions <- predict(length.model, newdata = new.data, type = "probs")

length.predictions.df <- data.frame(new.data, length.predictions)

length.predictions.df <- gather(length.predictions.df, Label, Probability, -Word_Length)

ggplot(length.predictions.df, aes(x = Word_Length, y = Probability, color = Label)) +
  geom_line() +
  labs(title = "Likelihood of Semantic Contribution Label by Word Length",
       x = "Word Length",
       y = "Predicted Probability",
       color = "Semantic Contribution Label") +
  theme_minimal()
```

## Frequency only Model

```{r}
freq.model <- multinom(Label ~ Log_Freq_Count, data = combined.data)

summary(freq.model)
```
```{r}
library(ggplot2)
library(tidyr)

new_data <- data.frame(Log_Freq_Count = seq(min(combined.data$Log_Freq_Count), max(combined.data$Log_Freq_Count), length.out = 100))

freq.predictions <- predict(freq.model, newdata = new_data, type = "probs")

freq.predictions.df <- data.frame(new_data, freq.predictions)

freq.predictions.df <- gather(freq.predictions.df, Label, Probability, -Log_Freq_Count)

ggplot(freq.predictions.df, aes(x = Log_Freq_Count, y = Probability, color = Label)) +
  geom_line() +
  labs(title = "Likelihood of Semantic Contribution Label by Frequency",
       x = "Log Normalized Frequency",
       y = "Predicted Probability",
       color = "Semantic Contribution Label") +
  theme_minimal()
```

```{r}
library(dplyr)
library(knitr)

avg.stats <- combined.data %>%
  group_by(POS) %>%
  summarize(avg.word.length = mean(Word_Length),
            median.word.length = median(Word_Length),
            avg.log.frequency = mean(Log_Freq_Count),
            median.log.frequency = median(Log_Freq_Count))

kable(avg.stats, format = "markdown")

```
